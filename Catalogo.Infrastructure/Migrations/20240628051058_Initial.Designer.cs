// <auto-generated />
using System;
using Catalogo.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalogo.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240628051058_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Catalogo.Domain.Entities.Flavor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PizzaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("PizzaId");

                    b.ToTable("Flavors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "3 Queijos",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Frango com requeijão",
                            Price = 59.99m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mussarela",
                            Price = 42.50m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Calabresa",
                            Price = 42.50m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pepperoni",
                            Price = 55.00m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Portuguesa",
                            Price = 45.00m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Veggie",
                            Price = 59.99m
                        });
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Pizzas");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.PizzaFlavor", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("int");

                    b.Property<int>("FlavorId")
                        .HasColumnType("int");

                    b.HasKey("PizzaId", "FlavorId");

                    b.HasIndex("FlavorId");

                    b.ToTable("PizzasFlavors");
                });

            modelBuilder.Entity("DeliveryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("DeliverysDetails");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Flavor", b =>
                {
                    b.HasOne("Catalogo.Domain.Entities.Pizza", null)
                        .WithMany("Flavors")
                        .HasForeignKey("PizzaId");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Pizza", b =>
                {
                    b.HasOne("Catalogo.Domain.Entities.Order", "Order")
                        .WithMany("Pizzas")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.PizzaFlavor", b =>
                {
                    b.HasOne("Catalogo.Domain.Entities.Flavor", "Flavor")
                        .WithMany("PizzaFlavors")
                        .HasForeignKey("FlavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalogo.Domain.Entities.Pizza", "Pizza")
                        .WithMany("PizzaFlavors")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flavor");

                    b.Navigation("Pizza");
                });

            modelBuilder.Entity("DeliveryDetails", b =>
                {
                    b.HasOne("Catalogo.Domain.Entities.Order", "Order")
                        .WithOne("DeliveryDetails")
                        .HasForeignKey("DeliveryDetails", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Flavor", b =>
                {
                    b.Navigation("PizzaFlavors");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Order", b =>
                {
                    b.Navigation("DeliveryDetails");

                    b.Navigation("Pizzas");
                });

            modelBuilder.Entity("Catalogo.Domain.Entities.Pizza", b =>
                {
                    b.Navigation("Flavors");

                    b.Navigation("PizzaFlavors");
                });
#pragma warning restore 612, 618
        }
    }
}
